Crypto Notes

17:39 < oni> hello. I wanted to ask, if I want to encrypt small amounts of text on a device without having a way of decrypting that information on said device, I'd need an asymetric cipher, and for that, would RSA generally be acceptable?
17:45 < oni> actually, now I think about it, if someone gets hold of said device, they could replace the encryption key with one of their own, potentially
17:45 <@ms7821> well there's two problems
17:46 <@ms7821> one is if someone gets hold of the device, they can calculate the keys you would have used to encrypt, and just reverse it
17:46 <@ms7821> so you need to derive a second key based on a random number, and then throw that away afterwards
17:46 <@ms7821> and yeah, if someone subverts the device, they can make it do what they want, but you probably can't do anything about that anyway
17:50 < oni> the first point is quite interesting..
17:50 < oni> the second point is perhaps mitigated because only new data added to the device would be compromised
17:51 < oni> ms7821 are you saying that, given the public key, the private can be known?
17:51 <@ms7821> oh, I guess it depends how you're doing it
17:52 < oni> my thinking was once data is done with and committed, it is encrypted via a public key on the device
17:52 <@ms7821> yeah, if you encrypt against the public key, that would be fine. I assumed the device would have a private key, hence concern about it being replaced
17:52 < oni> No, just the one key
17:53 < oni> im looking at SQLCipher for Android. It appears to use AES-256
17:53 <@ms7821> in that case, if it's compromised, all that happens is you can't read the records when it's synched
17:53 < oni> yeah, if its compromised without our knowing, which is unlikely
17:54 < oni> as you've probably guessed, im looking at this with these nooks in mind ;)
17:56 <@ms7821> yeah, sounds fund :D
17:56 <@ms7821> fun*
17:56 < oni> It is :)
17:57 < oni> hmmm, interesting
17:57 < oni> https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html 
17:57 < randybot> [ Some SecureRandom Thoughts | Android Developers Blog ]
18:00 <@ms7821> thinking further, you do still have the worry of brute-forcing the plaintext even if you just use the public key
18:01 < oni> presumably that is dependent on keysize
18:01 <@ms7821> so I think you do still want to derive a second key
18:01 <@ms7821> nah, on plaintext entropy
18:01 < oni> interesting...
18:02 <@ms7821> for each plaintext: if encrypt(public_key, plaintext) == ciphertext: return plaintext
18:03 < oni> of course
18:03 < oni> and typically, these entries will be short
18:03 <@ms7821> so you should instead derive an ephemeral key that's not brute-forceable, and store the public-key encrypted version of that
18:03 < oni> and, as fields in a database, possibly dictionary attackabke
18:03 < oni> attack-able
18:03 <@ms7821> and use the ephemeral key for encrypting the plaintext
18:04 <@ms7821> might be worth checking what pgp does
18:04 <@ms7821> or if there's a pgp lib, just use that :P
18:04 < oni> that'd be nice :)
18:04 < oni> I think I see what you mean, regarding the two keys
18:06 <@ms7821> the other advantage of an ephemeral key is you can encrypt it against multiple keys, allowing multiple people to read it
18:07 <@ms7821> (this is what truecrypt does iirc)
18:07 <@ms7821> and pgp, presumably, but I've never delved into that
18:08 <@ms7821> yeah, pgp does that - calls it the session key
18:10 < oni> oh right, so what happens is, you create a random key, encrypt with this random/session key and then chuck it away, keeping the private key which you encrypt with the original public key?
18:11 <@ms7821> nah, the random key is a symmetric key
18:11 -!- Saur0 [~Saur0@host31-49-8-206.range31-49.btcentralplus.com] has joined #dc4420
18:12 <@ms7821> so you generate the session key, use that to encrypt the message, and then store it alongside the message, encrypted with the public key of whoever you want to be able to decrypt it
18:12 < oni> yeah, thats what I said, I think :S
18:12 <@ms7821> "keeping the private key" implied the session key was a pair
18:12 <@ms7821> it doesn't need to be
18:13 < oni> Sorry yeah, re-read that. I meant keeping the private part of the session key
18:13 <@ms7821> but yeah, there's bound to be a pgp library that'll compile for the nook
18:13 < oni> Makes sense, Thanks! I hadnt thought of the entropy. that'd be dead easy to break
18:14 < oni> especially as a lot of fields are basically yes/no 1-4, etc
18:15 < oni> Nook is Android 2.3 I *believe*
18:15 < oni> I'll take a closer look, see if i can find a lib for this. Turns out that RSA and similar are supported along with many others which is nice
18:15 <@ms7821> https://github.com/guardianproject/gnupg-for-android suggests it works on 2.3
18:15 < randybot> [ guardianproject/gnupg-for-android Â· GitHub ]
18:16 < oni> Worth a shot. Least its all do-able :)
18:16 < oni> cheers
